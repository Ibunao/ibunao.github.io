<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Atom-上手]]></title>
    <url>%2F2017%2F07%2F01%2Fatom%2FAtom%E4%B8%8A%E6%89%8B%2F</url>
    <content type="text"><![CDATA[Atom使用教程详细的操作可以参考下面的教程极客学院 W3C 删除Atom使用的360进行删除，删除后会发现 C:\Users\你的用户名\ 有一个隐藏的文件夹 .atom 将其删除，不删除的话重新安装atom的时候依旧会保留原来的配置及插件 插件安装完 Atom 之后自带了79个插件，基本的功能都已经可以使用了 安装插件 在 setting 页面可以看到 Packages 和 Install 两个选项， Packages 查看已经安装的插件， Install 来安装插件的，可以使用 ctrl+Shift+p 进入这个页面 插件 是否安装 file-icons yes pigments no minimap yes autocomplete-paths no atom-ternjs no emmet yes docblockr yes vim-mode no platformio-ide-terminal no atom-beautify yes php-debug yes linter-jshint yes simplified-chinese-menu no goto-definition yes Highlight Selected yes file-icons 显示文件类型对应的图标 pigments css/less 写表示颜色时显示颜色 minimap 右边代码预览框 autocomplete-paths 补全路径 atom-ternjs 补全Js emmet 前端实用工具 教程 docblockr 代码注释 vim-mode 在 Atom 上使用 Vim Highlight Selected 选中单词所有相同的高亮 platformio-ide-terminal Atom 中集成终端 atom-beautify 美化代码段 快捷键 ctrl + alt + b ，如果弹出出错信息，可能是需要依赖一些其他插件，比如 php的 就需要装 php-cs-fixer 插件 linter-php 检查php语法错误 ，可能需要将php配置成全局 ，安装它的时候会让安装一些依赖插件，按照提示安装即可 linter-jshint 检查js语法错误 ，需要安装node，使用npm 全局安装jshint (没有配置成功，报错incompatible values for the esversion and es3 linting option ，配置文件写错了) 相关资料 jshint配置 linter-jshint配置 首先安装 node ，使用npm 全局安装jshint 在 ~ (~,表示用户目录，在windows下是C:\Users\dingran)文件下放置js配置文件 .jshintrc 配置文件 atom 配置插件，如下图勾选lint inline javaScript,可以在html或php中检查js点击 open config folder 找到配置文件，查看配置文件 config.cson 123&quot;linter-jshint&quot;: disableWhenNoJshintrcFileInPath: false lintInlineJavaScript: true php-debug xdebug调试 simplified-chinese-menu 汉化 goto-definition 文件跳转，放到方法或类名上右键 goto definition 就会出现列表，选择跳转，有快捷键，还是不用了 remote-ftp sftp上传工具插件配置：把 auto upload on save 由 aways 改为 nerver 可以在 packages-&gt;Remote-Ftp-&gt;Create …… 来生成配置文件 .ftpconfig (生成在添加到Atom项目文件根目录，上传的时候也是在根目录中寻找配置文件，限制啊)，上传只能在左边 menu 菜单来选中上传和下载 (限制啊) 12345678910111213141516171819202122&#123; &quot;protocol&quot;: &quot;sftp&quot;, # 协议 &quot;port&quot;: 22, # 端口 &quot;host&quot;: &quot;128.128.1.79&quot;, # ip &quot;user&quot;: &quot;root&quot;, # 用户 &quot;pass&quot;: &quot;******&quot;, # 密码 &quot;promptForPass&quot;: false, &quot;remote&quot;: &quot;/usr/share/nginx/html/protected&quot;, # 对应的项目文件地址 &quot;local&quot;: &quot;&quot;, &quot;agent&quot;: &quot;&quot;, &quot;privatekey&quot;: &quot;&quot;, &quot;passphrase&quot;: &quot;&quot;, &quot;hosthash&quot;: &quot;&quot;, &quot;ignorehost&quot;: true, &quot;connTimeout&quot;: 10000, &quot;keepalive&quot;: 10000, &quot;keyboardInteractive&quot;: false, &quot;remoteCommand&quot;: &quot;&quot;, &quot;remoteShell&quot;: &quot;&quot;, &quot;watch&quot;: [], &quot;watchTimeout&quot;: 500&#125; Markdown相关Markdown相关Markdown相关 markdown-scroll-sync 预览同步滚动tidy-markdown Markdown美化，在保存的时候或者主动调用插件时触发 python相关编辑器里运行直接运行代码 js、python 等都可以atom-runer编辑器运行代码快捷键看插件介绍win配置12345File-&gt;Config...末尾添加 runner: scopes: python: &quot;D:\\ding\\python&quot; mac配置1234Atom-&gt;Config...末尾添加 runner: python: &quot;/usr/local/bin/python3&quot; autocomplete-python自动提示 装逼神奇 activate-power-mode 颤抖吧 快捷键慕课ATOM编辑器快捷键大全 Atom 兼容sublime快捷键，同时也有自己的快捷键 12345678910111213141516171819202122Ctrl + / 启用注释 同sublimeCtrl + \ 展示隐藏目录树 同时也可以 ctrl+k ctrl+bCtrl + Alt + I 打开Chrome调试器 nbCtrl + [ 向右缩进Ctrl + ] 向左缩进Shift + Home 选定光标至行首Shift + End 选定光标至行尾Shift + PageUp 选定光标至页首Shift + PageDown 选定光标至页尾Ctrl + Home 光标到页首Ctrl + End 光标至页尾Ctrl + PageUp 切换上一个打开的标签Ctrl + PageDown 切换下一个打开的标签Ctrl + D 匹配选定下一个 同sublimeAlt + F3 匹配选定所有Ctrl + ↑ 选中行上移 和sublime有区别，sulime为ctrl+Shift+↑Ctrl + ↓ 选中行下移cmd + b 在打开的文件之间切换Ctrl + Shift + L 切换文本内容类型，例如 html/php 和sublime不同 cmd + shift + b 只搜索从上次git commit后修改或者新增的文件cmd + shift + d 复制选中代码并粘贴到选中的后面cmd + shift + u 选择文件编码格式 折叠1234Alt + Ctrl + [ 折叠Alt + Ctrl + ] 展开Alt + Ctrl + Shift + &#123; 折叠全部Alt + Ctrl + Shift + &#125; 展开全部 Markdown1Ctrl + Shift + M Markdown预览 Markdown 语法补全1234567891011b **加粗**legal Copyright (c) 2017 Copyright Holder All Rights Reserved.img ![]()l []()i **code \```code\```\t - [ ] 多选按钮table | Header One | Header Two || :------------- | :------------- || Item One | Item Two | 更改快捷键 有些时候需要更改快捷键，比如快捷键冲突时 打开快捷键设置，如图搜索要改的快捷键 如 ctrl-shift-m,发现有两个，出现了冲突，这时可以自定义一个(优先级最高)将其覆盖点击需要自定义快捷键的最左边的小按钮进行复制 打开自定义文件(点击链接 your keymap file) 将复制的快捷键定义粘贴在自定义文件中，如图 备份插件备份插件教程 将配置文件上传到github 备份使用快捷键 Ctrl + Shift + P 呼出命令栏，输入 sync backup恢复备份使用快捷键 Ctrl + Shift + P 呼出命令栏，输入 sync restore 补充 获取 Gist Id 进入到github，点击你的头像会看到 Your gists,点击进去 如果没有，则需要创建一个：起个名称(用途)，写个简介 获取 Gist Id，进入创建好的 Gist 看到连接 https://gist.github.com/Ibunao/654a98d3e154348eaebba448312b0152 其中 654a98d3e154348eaebba448312b0152 就是 Gist Id xdebug调试相关教程 atom 安装 php-debug 插件，不用配置 php开启xdebugwin上安装的是wamp所以xdebug都是有的php.ini 配置 12345678910111213141516[xdebug]zend_extension =&quot;D:/ding/wamp64/bin/php/php5.6.25/zend_ext/php_xdebug-2.4.1-5.6-vc11-x86_64.dll&quot;;xdebug.remote_enable = Offxdebug.profiler_enable = Onxdebug.profiler_enable_trigger = offxdebug.profiler_output_name = cachegrind.out.%t.%pxdebug.profiler_output_dir =&quot;D:/ding/wamp64/tmp&quot;xdebug.show_local_vars=0xdebug.remote_enable=1xdebug.remote_host=127.0.0.1xdebug.remote_connect_back=1xdebug.remote_port=9000xdebug.remote_handler=dbgpxdebug.remote_mode=reqxdebug.remote_autostart=true 调试 开启debug插件 atom左下角debug按钮打开debug，没有监听到时显示的是 Listening on address:port 127.0.0.1:9000 在方法中打断点 (断点要注意了，如果打到空行，或者for循环里面将会无法监听到) 如图 浏览器中访问能进入到打断点的方法中 ，如 www.basic.com/test/test如果操作正确将会看到监听状态由 Listening on address:port 127.0.0.1:9000 改变成 Connected ,此时就可以使用debug调试了 如果没有改变监听状态，可能就是断点打错了，请检查如果atom的debug启动不起来，可能是9000端口被占用了，更改插件端口和php.ini 中的xdebug配置的端口即可 操作详解进入到断点将会输出一下内容，如下图其中，主要的有两部分内容 栈信息Stack 和变量值信息 Context其中 Stack 显示的是走到这个断点所经过的方法，如图从7到0，可以点击不同的栈来查看他的 变量值信息 Context Context 中显示的是变量信息，其中 Locals 显示的是方法中的变量值信息Superglobals 显示的是全局的信息 ，如 $_COOKLE、$_POST 等一些全局的信息User defined constants 显示的是定义的常量 操作 添加断点在代码的左边栏上点击，因为比较窄不好点击，也可以使用快捷键 alt + f9 Stop 释放掉监听 alt + f5Continue 走向下一个断点 Step Over 一步一步往下走 alt + f6Step In 进入到方法内 alt + f7Step Out 跳出方法 alt + f8 Restore Panels 恢复原始的展示窗口其他两个就是切换展示位置的 xdebug使用 xdebug使用 xdebug使用 xdebug使用 xdebug相关 xdebug相关 mac 安装 设置代码段 snippet 代码块 有一点不好的是，只能在某个语言环境中触发为某个语言设置的代码段 教程 实例 12345678&apos;.text.html.php&apos;: # 语言类型的 scope &apos;php&apos;: # 随便 &apos;prefix&apos;: &apos;header&apos; #触发单词 &apos;body&apos;: &apos;header(&quot;Content-Type:text/html;charset=utf-8&quot;);\n&apos; #\n 换行&apos;.text.html.php&apos;: &apos;yii&apos;: &apos;prefix&apos;: &apos;vy&apos; &apos;body&apos;: &apos;&lt;?=$$&#123;1:this&#125; ;?&gt;&apos; 问题 ctrl+, 快捷键无法打开 setting ,可能是因为快捷键冲突 Atom问题与解决 打开多个窗口时，在一个窗口添加项目，项目目录变的不可见点击并会报错解决 ： 参考 注意：先保存任何未保存的作业 win系统cmd运行 atom --clear-window-state 即可]]></content>
      <categories>
        <category>工具</category>
        <category>Atom</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Atom-小技巧]]></title>
    <url>%2F2017%2F07%2F01%2Fatom%2F%E5%B0%8F%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[关于代码高亮``` 后面跟上语言如 php、js等 如 js但是有时 php 在 Atom 上并不会高亮，这时在首航添加 &lt;?php 即可123456789101112&lt;?php/****/class ClassName extends AnotherClass&#123; function __construct(argument) &#123; # code... &#125;&#125; 插件使用方法每个插件的使用方法都可以在 setting-&gt;packages 中点击插件名来进入到插件的介绍也面]]></content>
      <categories>
        <category>工具</category>
        <category>Atom</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello Hexo]]></title>
    <url>%2F2017%2F06%2F29%2FHello-hexo%2F</url>
    <content type="text"><![CDATA[特别声明文章md头部设置1234567891011121314---title: test #标题名称date: 2017-06-29 11:56:02 #时间tags: #创建标签 - Testing #标签名称 - begin #标签名称categories: hello hexo #分类---# 多级分类格式示例 categories: - 工具 - Atom 添加图片123456在source下创建images文件夹。![&apos;tupian&apos;](/images/my.jpg) images 是source下的文件夹也可以吧图片放在七牛进行引用。 使用详细操作请转到 hexo官方文档下面只用到一些基础的操作 第一步：先进入到博客目录 没有权限的加 sudo 1/Users/echo-ding/Documents/ding/www/github-blog 第二步：创建文章1hexo new &quot;My New Post&quot; #my new post 为文章名 也可以直接在source中创建md文档(一般用这个) 第三步：启动服务(为了先本地预览)1hexo server 简写&amp;带参数12hexo s --debug #默认以4000端口启动sudo hexo s --debug -p 80 #以80端口启动 第四部：生成文件(md转成html)1hexo generate 第五部：推送到远端1hexo deploy 如果不需要本地预览，就可以省略第三步了，直接生成、上传 代码高亮 在代码块开头后添加php表示php代码，用来高亮显示。 12345678class ClassName extends AnotherClass&#123; public function FunctionName($value='') &#123; echo "string"; &#125;&#125;]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>